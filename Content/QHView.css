summary {
	cursor: pointer;
}
.tabContentQh {
	grid-template-areas:
	'qhScaleLeftHeader	qhHeader	qhScaleRightHeader'
	'qhScaleLeft 		qhCanvas 	qhScaleRight'
	'.					qhScaleX	.			';
	grid-template-columns: min-content auto min-content;
	grid-template-rows: min-content min-content min-content;
	/*
	*/
	position: relative;
	padding-right: 20px;
	padding-bottom: 20px;
}
.qhHeader {
	grid-area: qhHeader;
	text-align: center;
}
.qhScale > input {
	width: 6ch;
	margin-left: 4px;
	border: none;
}
.qhScale {
	display: grid;
	align-items: end;
}
.qhScaleLeftHeader > input,
.qhScaleRightHeader > input {
	margin-bottom: -3px;
}
.qhScale > input:invalid {
	outline: 1px solid var(--colorEkhMagenta);
	background-color: var(--colorEkhCyan);
}
.qhScaleLeft {
	grid-area: qhScaleLeft;
}
.qhScaleLeftHeader {
	grid-area: qhScaleLeftHeader;
}
.qhScaleLeft > input,
.qhScaleLeftHeader > input {
	border-bottom: 3px solid var(--colorEkhMagenta);
}
.qhScaleRight {
	grid-area: qhScaleRight;
}
.qhScaleRightHeader {
	grid-area: qhScaleRightHeader;
}
.qhScaleRight > input,
.qhScaleRightHeader > input {
	border-bottom: 3px solid var(--colorEkhCyan);
}
.qhScaleX {
	grid-area: qhScaleX;
}
.qhCanvas {
	grid-area: qhCanvas;
	width: 100%;
	/*
	width: 87%;
	height: 74%;
	*/
	border-left: 3px solid var(--colorEkhMagenta);
	border-right: 3px solid var(--colorEkhCyan);
}
.qhTrackCanvas {
	border-top: 3px solid black; /*top is actually bottom => see inversion by scale(1, -1)*/
	transform: scale(1, -1);
	/*
	background-color: var(--colorEkhLightestgray);
	*/
}
.qhAuxCanvas {
	transform: scale(1, 1); /*transform() seems to influence the rendering order => needed here to keep AuxCanvas in front of TrackCanvas*/
	border-bottom: 3px solid black;
}
.qhControls {
	/*
	z-index: 1;
	grid-area: qhControls;
	align-self: end;
	*/
	position: absolute;
	bottom: 0;
	width: 100%;
	background-color: rgba(0, 0, 0, .5);
	color: var(--colorEkhLightestgray);
}
.qhTableContainer {
	/*
	z-index: 1;
	grid-area: qhTableContainer;
	*/
	position: absolute;
	right: 0;
	height: 100%;
	background-color: rgba(0, 0, 0, .5);
	color: var(--colorEkhLightestgray);
}
.qhTableContainer[open] {
	overflow-x: hidden;
	overflow-y: auto;
	padding-right: 20px; /*~width of scrollbar if overflow*/
}
/*
.qhTableContainer:not([open]) {
	width: 1.2rem;
}
*/
.qhTableContainer:not([open]) > summary {
	writing-mode: vertical-lr;
	-webkit-writing-mode: vertical-lr;
}
.qhTable {
	display: grid;
	grid-template-columns: min-content auto min-content min-content min-content min-content;
	align-items: center;
}
.qhTable > label,
.qhTable > span {
	white-space: nowrap;
}
.qhTable > span {
	text-align: center;
}
.qhTable > .spanSkala {
	text-align: end;
}
.qhTable > .spanL {
	color: var(--colorEkhMagenta);
}
.qhTable > .spanR {
	color: var(--colorEkhCyan);
}





/*********************Individual Checkbox/RadioBtn Styling START*********************/
/* Hiding the initial checkbox */
.ekhCheckbox {
	visibility: hidden;
	width: auto;
	/*margin-left: 30px;
	margin-right: 20px;
	transform: scale(1.8);*/
}

	.lblcb {
		display: inline-block;
		position: relative;
		padding-left: 7px;
		margin-top: 2px;
		cursor: pointer;
	}
	
	#lblcbQHtoggle {
		padding-left: 0px;
		width: 25px
	}
	
	/* Creating a custom checkbox based on demand */
	.checkmark {
		position: absolute;
		top: 0;
		left: 0;
		height: 23px;
		width: 23px;
		font-size: 2.5vh;
	}
	
	.lblcb input ~ .checkmark {
		border: 3px solid #939393;
		border-radius: 4px;
		background-color: white;
	}
	
	/* Specify the background color to be shown when hovering over checkbox */
	.lblcb:hover input ~ .checkmark {
		border: 3px solid #666;
		background-color: white;
	}
	
	/* Specify the background color to be shown when checkbox is active */
	.lblcb input:active ~ .checkmark {
		background-color: white;
	}
	
	/* Specify the background color to be shown when checkbox is checked */
	.lblcb input:checked ~ .checkmark {
		background-color: #1F94B9;
		border: none;
	}
	
	/* Checkmark to be shown in checkbox */
	/* It is not be shown when not checked */
	.checkmark:after {
		content: "âœ“";
		display: none;
		position: absolute;
		color: white;
		font-weight: bold;
		left: 3px;
		/*top: -2px;*/
	}

/*********************Individual Checkbox/RadioBtn Styling END*********************/